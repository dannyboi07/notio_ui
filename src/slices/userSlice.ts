import { createSlice } from "@reduxjs/toolkit";
import { useSelector } from "react-redux";

const initialState: UserContext = {
    isLoggedIn: false,
    refresh: true,
};

const authSlice = createSlice({
    name: "user",
    initialState,
    reducers: {
        loginAndSetProfile: (state, action: { payload: Profile; }) => {
            return { ...state, ...action.payload, isLoggedIn: true };
        },
        setProfile: (state, action: { payload: Profile; }) => {
            return { ...state, ...action.payload };
        },
        setRefresh: (state, action: { payload: boolean; }) => {
            return { ...state, refresh: action.payload };
        },
        logout: (_state) => {
            return { isLoggedIn: false, refresh: false };
        },
    }
});

// These are the setter actions generated by createSlice
const { loginAndSetProfile, setProfile, setRefresh, logout } = authSlice.actions;

// Define the state access methods here itself
const selectUser = (state: RootState) => state.user;
// Wrap the state access methods with useSelector hook, for the consumers convenience
const useSelectUser = () => useSelector(selectUser);

export { authSlice, loginAndSetProfile, setProfile, setRefresh, logout, useSelectUser };
export default authSlice.reducer;
